services:
  sqlserver:
    build:
      context: .
      dockerfile: Dockerfile.sqlserver
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrong!Passw0rd", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - sqlserver_data:/var/opt/mssql
    command: >
      /bin/bash -c "
        /opt/mssql/bin/sqlservr & 
        sleep 90 && 
        /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -Q 'CREATE DATABASE inventario_db' &&
        /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -Q 'CREATE DATABASE productos_db' &&
        wait
      "

  inventario-service:
    build: ./inventario-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sqlserver:1433;databaseName=inventario_db;encrypt=false
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=YourStrong!Passw0rd
    depends_on:
      sqlserver:
        condition: service_healthy
    restart: unless-stopped

  productos-service:
    build: ./productos-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sqlserver:1433;databaseName=productos_db;encrypt=false
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=YourStrong!Passw0rd
    depends_on:
      sqlserver:
        condition: service_healthy
    restart: unless-stopped

volumes:
  sqlserver_data: